{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1)(2, \"h1\");\n    i0.ɵɵtext(3, \"Register\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n    i0.ɵɵtext(6, \"FirstName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n    i0.ɵɵtext(10, \"LastName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 3);\n    i0.ɵɵtext(14, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 3);\n    i0.ɵɵtext(18, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 8);\n    i0.ɵɵtext(22, \"Create Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\", 8);\n    i0.ɵɵtext(26, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_div_0_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.register());\n    });\n    i0.ɵɵtext(29, \"Register\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.registerForm);\n  }\n}\nfunction RegisterComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Hello\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class RegisterComponent {\n  constructor(router) {\n    this.router = router;\n    this.registerForm = new FormGroup({\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      phoneNumber: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      phone: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {}\n  register() {\n    alert(this.registerForm.value.firstName + ', you have registered successfully');\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"aria-autocomplete\", \"new-password\", 3, \"formGroup\"], [1, \"form-control\"], [\"for\", \"email\"], [\"formControlName\", \"firstName\", \"id\", \"email\", \"autocomplete\", \"new-password\", \"type\", \"text\", \"placeholder\", \"First Name\"], [\"formControlName\", \"lastName\", \"id\", \"email\", \"autocomplete\", \"new-password\", \"type\", \"text\", \"placeholder\", \"Last Name\"], [\"formControlName\", \"phoneNumber\", \"id\", \"email\", \"autocomplete\", \"new-password\", \"type\", \"number\", \"placeholder\", \"Phone Number\"], [\"formControlName\", \"email\", \"id\", \"email\", \"autocomplete\", \"new-password\", \"type\", \"email\", \"placeholder\", \"Email\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"id\", \"password\", \"autocomplete\", \"new-password\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"formControlName\", \"password\", \"id\", \"password\", \"autocomplete\", \"new-password\", \"type\", \"password\", \"placeholder\", \"Confirm Password\"], [\"type\", \"submit\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RegisterComponent_div_0_Template, 30, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, RegisterComponent_div_1_Template, 3, 0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.user);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"@mixin focus {\\n    &:focus{\\n        outline-offset: 2px;\\n        outline: 2px solid #07c;\\n    }\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 80px auto;\\n    padding: 16px 16px 24px;\\n    box-shadow: 0 2px 32px rgba(0, 0, 0, 0.15);\\n    border-radius: 4px;\\n\\n    h1{\\n        margin-top: 0;\\n        color: #555;\\n        padding-bottom: 4px;\\n        border-bottom: 1px solid #ccc;\\n    }\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n    margin-bottom: 16px;\\n    input,\\n    label{\\n        display: block;\\n    }\\n\\n    .label{\\n        font-size: 0.9rem;\\n        font-weight: 500;\\n        margin-bottom: 4px;\\n    }\\n\\n    input{\\n        padding: 8px;\\n        height: 35px;\\n        border-radius: 4px;\\n        width: 100%;\\n        border: 2px solid #ccc;\\n        background-color: white;\\n\\n        @include focus;\\n    }\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    background-color: #000;\\n    color: #fff;\\n    padding: 8px 24px;\\n    border-radius: 4px;\\n    width: 100%;\\n    font-size: 1.2rem;\\n    @include focus;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO1FBQ0ksbUJBQW1CO1FBQ25CLHVCQUF1QjtJQUMzQjtBQUNKOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIsMENBQTBDO0lBQzFDLGtCQUFrQjs7SUFFbEI7UUFDSSxhQUFhO1FBQ2IsV0FBVztRQUNYLG1CQUFtQjtRQUNuQiw2QkFBNkI7SUFDakM7QUFDSjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQjs7UUFFSSxjQUFjO0lBQ2xCOztJQUVBO1FBQ0ksaUJBQWlCO1FBQ2pCLGdCQUFnQjtRQUNoQixrQkFBa0I7SUFDdEI7O0lBRUE7UUFDSSxZQUFZO1FBQ1osWUFBWTtRQUNaLGtCQUFrQjtRQUNsQixXQUFXO1FBQ1gsc0JBQXNCO1FBQ3RCLHVCQUF1Qjs7UUFFdkIsY0FBYztJQUNsQjtBQUNKOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIkBtaXhpbiBmb2N1cyB7XG4gICAgJjpmb2N1c3tcbiAgICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICMwN2M7XG4gICAgfVxufVxuXG5mb3JtIHtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogODBweCBhdXRvO1xuICAgIHBhZGRpbmc6IDE2cHggMTZweCAyNHB4O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDMycHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG5cbiAgICBoMXtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgY29sb3I6ICM1NTU7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA0cHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuICAgIH1cbn1cblxuLmZvcm0tY29udHJvbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICBpbnB1dCxcbiAgICBsYWJlbHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLmxhYmVse1xuICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgIH1cblxuICAgIGlucHV0e1xuICAgICAgICBwYWRkaW5nOiA4cHg7XG4gICAgICAgIGhlaWdodDogMzVweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgI2NjYztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cbiAgICAgICAgQGluY2x1ZGUgZm9jdXM7XG4gICAgfVxufVxuXG5idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgcGFkZGluZzogOHB4IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIEBpbmNsdWRlIGZvY3VzO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","RegisterComponent_div_0_Template_button_click_28_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","register","ɵɵadvance","ɵɵproperty","ctx_r0","registerForm","RegisterComponent","constructor","router","firstName","required","lastName","phoneNumber","email","password","phone","ngOnInit","alert","value","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵtemplate","RegisterComponent_div_0_Template","RegisterComponent_div_1_Template","user"],"sources":["/Users/troyseide/Documents/VS Code Projets/Angular Projects/VendorMe/VendorMe/src/app/register/register.component.ts","/Users/troyseide/Documents/VS Code Projets/Angular Projects/VendorMe/VendorMe/src/app/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  userForm: FormGroup;\n  //check if user is a vendor or not before login to determine which div\n  // they see\n\n  user: true;\n  registerForm = new FormGroup({\n    firstName: new FormControl('', Validators.required),\n    lastName: new FormControl('', Validators.required),\n    phoneNumber: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n    phone: new FormControl('', Validators.required)\n  })\n\n  constructor(private router: Router){\n\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  register(){\n    alert(this.registerForm.value.firstName + ', you have registered successfully');\n  }\n}\n","<div *ngIf=\"user\">\n    <form [formGroup]=\"registerForm\"  aria-autocomplete=\"new-password\">\n    <h1>Register</h1>\n    <div class=\"form-control\">\n        <label for=\"email\">FirstName</label>\n        <input formControlName=\"firstName\" id=\"email\" autocomplete=\"new-password\" type=\"text\" placeholder=\"First Name\">\n    </div>\n\n    <div class=\"form-control\">\n        <label for=\"email\">LastName</label>\n        <input formControlName=\"lastName\" id=\"email\" autocomplete=\"new-password\" type=\"text\" placeholder=\"Last Name\">\n    </div>\n\n\n    <div class=\"form-control\">\n        <label for=\"email\">Phone Number</label>\n        <input formControlName=\"phoneNumber\" id=\"email\" autocomplete=\"new-password\" type=\"number\" placeholder=\"Phone Number\">\n    </div>\n\n    <div class=\"form-control\">\n        <label for=\"email\">Email</label>\n        <input formControlName=\"email\" id=\"email\" autocomplete=\"new-password\" type=\"email\" placeholder=\"Email\">\n    </div>\n\n    <div class=\"form-control\">\n        <label for=\"password\">Create Password</label>\n        <input formControlName=\"password\" id=\"password\" autocomplete=\"new-password\" type=\"password\" placeholder=\"Password\">\n    </div>\n\n    <div class=\"form-control\">\n        <label for=\"password\">Confirm Password</label>\n        <input formControlName=\"password\" id=\"password\" autocomplete=\"new-password\" type=\"password\" placeholder=\"Confirm Password\">\n    </div>\n    <button  (click)=\"register()\" type=\"submit\">Register</button>\n    </form>\n</div>\n\n<div *ngIf=\"!user\">\n    <p>Hello</p>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}